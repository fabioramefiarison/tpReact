{"ast":null,"code":"var _jsxFileName = \"E:\\\\T E C\\\\R E A C T\\\\projet-4\\\\src\\\\Components\\\\chat\\\\ChatWindow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport Message from './Message';\nimport './chat.css';\nimport { Context } from '../../API/ContextProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatWindow = ({\n  conversation,\n  onAddConversation\n}) => {\n  _s();\n  const {\n    onSent,\n    input,\n    setInput,\n    recentPrompt,\n    previousPrompt,\n    showResult,\n    loading,\n    resultData\n  } = useContext(Context);\n  const [messages, setMessages] = useState([]);\n  const handleSend = () => {\n    if (input.trim()) {\n      const newMessage = {\n        sender: 'user',\n        text: input\n      };\n      setMessages([...messages, newMessage]);\n\n      // Call the onSent function from context\n      onSent(input, aiResponse => {\n        const aiMessage = {\n          sender: 'ai',\n          text: `AI: ${resultData}`\n        };\n        setMessages(prevMessages => [...prevMessages, resultData]);\n      });\n      setInput('');\n      onAddConversation({\n        title: input,\n        messages: [...messages, newMessage]\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-window\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: conversation ? conversation.messages.map((msg, index) => /*#__PURE__*/_jsxDEV(Message, {\n        message: msg\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)) : messages.map((msg, index) => /*#__PURE__*/_jsxDEV(Message, {\n        message: msg\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"4I+jLuyHpa9tKPn3Yx4m6QmqMTM=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useContext","useState","Message","Context","jsxDEV","_jsxDEV","ChatWindow","conversation","onAddConversation","_s","onSent","input","setInput","recentPrompt","previousPrompt","showResult","loading","resultData","messages","setMessages","handleSend","trim","newMessage","sender","text","aiResponse","aiMessage","prevMessages","title","className","children","map","msg","index","message","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["E:/T E C/R E A C T/projet-4/src/Components/chat/ChatWindow.jsx"],"sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport Message from './Message';\r\nimport './chat.css';\r\nimport { Context } from '../../API/ContextProvider';\r\n\r\nconst ChatWindow = ({ conversation, onAddConversation }) => {\r\n  const { onSent, input, setInput, recentPrompt, previousPrompt, showResult, loading, resultData } = useContext(Context);\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const handleSend = () => {\r\n    if (input.trim()) {\r\n      const newMessage = { sender: 'user', text: input };\r\n      setMessages([...messages, newMessage]);\r\n\r\n      // Call the onSent function from context\r\n      onSent(input, (aiResponse) => {\r\n        const aiMessage = { sender: 'ai', text: `AI: ${resultData}` };\r\n        setMessages((prevMessages) => [...prevMessages, resultData]);\r\n      });\r\n\r\n      setInput('');\r\n      onAddConversation({ title: input, messages: [...messages, newMessage] });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"chat-window\">\r\n      <div className=\"messages\">\r\n        {conversation ? conversation.messages.map((msg, index) => (\r\n          <Message key={index} message={msg} />\r\n        )) : messages.map((msg, index) => (\r\n          <Message key={index} message={msg} />\r\n        ))}\r\n      </div>\r\n      <div className=\"input\">\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          placeholder=\"Type a message...\"\r\n        />\r\n        <button onClick={handleSend}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatWindow;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}